* Pass key/index as first block arg to :class and :extendv
class: |key, hsh|

* Allow passing options to Binding#serialize.
	serialize(.., options{:exclude => ..})

* Allow :writer and :reader / :getter/:setter

document `XML::AttributeHash` etc

* deprecate :from, make :a(lia)s authorative.
* cleanup ReadableWriteable
* deprecate Representable::*::ClassMethods (::from_hash and friends)

* Song < OpenStruct in test_helper

* have representable-options (:include, :exclude) and user-options




def compile_fragment(doc)
module ReaderWriter
  def compile_fragment(doc)
    do whatever
    super
  end
=> do that for all "features" (what parts would that be?: getter/setter, reader/writer, readable/writeable )?