/ %h1 Show
:javascript
  $(document).ready(function() {
    var tagsUpdate = function(event, ui) {
      // do something special
      //console.log($("#myTags").tagit("assignedTags"));
      if (ui.duringInitialization) {return}
      var preexistingtags = [1,2,3]
      var tags_array = $("#myTags").tagit("assignedTags");
      var data = {tags: tags_array};
      //console.log(data);
      $.ajax({
          url: '/bills/' + '#{@bill.uid}' + '/update',
          type: 'PUT',
          data: data,
          success: function(result) {
            console.log(result);
              // Do something with the result
          }
      });
    }

    var config = {
      afterTagAdded: tagsUpdate,
      afterTagRemoved: tagsUpdate
    }
    $("#myTags").tagit(config);
  });

%h1=t '.title', :default => t('search.bill') + @bill.uid

/= form_tag('/tags', :method => 'get') do
/  = label_tag :q, "Tags"
/  = text_field_tag :q, params[:q]
/  = submit_tag "Agregar"

%ul#myTags
  / Existing list items will be pre-added to the tags
  - if @bill.tags != nil
    - @bill.tags.each do |tag|
      %li#preexisting= tag

%table.table.table-striped
  %thead
  %tbody
    %tr
      %th= t 'bill.bulletin'
      %td.numeric= @bill.uid
    %tr
      %th= t 'bill.title'
      %td= @bill.title
    %tr
      %th= t 'bill.summary'
      %td= @bill.summary
    %tr
      %th= t 'bill.creation_date'
      %td= DateTime.parse(@bill.creation_date).to_date.to_s
    %tr
      %th= t 'bill.initiative'
      %td= @bill.initiative
    %tr
      %th= t 'bill.origin_chamber'
      %td= @bill.origin_chamber
    %tr
      %th= t 'bill.current_urgency'
      %td= @bill.current_urgency
    %tr
      %th= t 'bill.stage'
      %td= @bill.stage
    %tr
      %th= t 'bill.sub_stage'
      %td= @bill.sub_stage
    %tr
      %th= t 'bill.state'
      %td= @bill.state
    %tr
      %th= t 'bill.law'
      %td= @bill.law
    %tr
      %th= t 'bill.link_law'
      %td= @bill.link_law
    %tr
      %th= t 'bill.merged'
      %td= @bill.merged
    %tr
      %th= t 'bill.matters'
      - @matters = @bill.matters
      %td= render partial: "matter", collection: @matters
    %tr
      %th= t 'bill.authors'
      - @authors = @bill.authors
      %td= render partial: "author", collection: @authors
    %tr
      %th= t 'bill.events'
      - @events = @bill.events
      %td= render partial: "event", collection: @events
    %tr
      %th= t 'bill.urgencies'
      - @urgencies = @bill.urgencies
      %td= render partial: "urgencie", collection: @urgencies
    %tr
      %th= t 'bill.reports'
      - @reports = @bill.reports
      %td= render partial: "report", collection: @reports
    %tr
      %th= t 'bill.modifications'
      - @modifications = @bill.modifications
      %td= render partial: "modification", collection: @modifications
    %tr
      %th= t 'bill.documents'
      - @documents = @bill.documents
      %td= render partial: "document", collection: @documents
    %tr
      %th= t 'bill.instructions'
      - @instructions = @bill.instructions
      %td= render partial: "instruction", collection: @instructions
    %tr
      %th= t 'bill.observations'
      %td= @bill.observations

/           = link_to t('.destroy', :default => t("helpers.links.destroy")), fruit_path(fruit), :method => :delete, :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')), :class => 'btn btn-mini btn-danger'

/ = link_to t('.new', :default => t("helpers.links.new")), new_fruit_path, :class => 'btn btn-primary'
